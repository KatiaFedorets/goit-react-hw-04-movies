{"version":3,"sources":["services/service_api.jsx","components/MoviesViewItems/MoviesViewItems.jsx","views/HomeView.jsx"],"names":["API_KEY","BASE_URL","fetchGetTrending","axios","get","fetchMoviesByQuery","searchQuery","fetchMoviesDetails","movieId","fetchMoviesCast","fetchMoviesReviews","withRouter","movies","location","console","log","map","movie","to","pathname","id","state","from","title","HomeView","error","MoviesApi","then","response","setState","data","results","catch","this","length","Component"],"mappings":"yIAAA,qBAEMA,EAAU,mCACVC,EAAW,gCAgCF,KACbC,iBA/BuB,WACvB,OAAOC,IAAMC,IAAN,UACFH,EADE,oCACkCD,EADlC,qBA+BPK,mBA1ByB,SAAAC,GACzB,OAAOH,IAAMC,IAAN,UACFH,EADE,gCAC8BD,EAD9B,iCAC8DM,EAD9D,iCA0BPC,mBArByB,SAAAC,GACzB,OAAOL,IAAMC,IAAN,UACFH,EADE,iBACeO,EADf,oBACkCR,EADlC,qBAqBPS,gBAhBsB,SAAAD,GACtB,OAAOL,IAAMC,IAAN,UACFH,EADE,iBACeO,EADf,4BAC0CR,EAD1C,qBAgBPU,mBAXyB,SAAAF,GACzB,OAAOL,IAAMC,IAAN,UACFH,EADE,iBACeO,EADf,4BAC0CR,EAD1C,uB,gCC9BT,gCAyBeW,iBAtBS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAEjC,OADAC,QAAQC,IAAIF,GAEV,6BACGD,EAAOI,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYF,EAAMG,IAC1BC,MAAO,CACLC,KAAMT,IAJZ,SAQGI,EAAMM,SATFN,EAAMG,a,yGCHjBI,E,4MACJH,MAAQ,CACNI,MAAO,KACPb,OAAQ,I,EAOVV,iBAAmB,WACjBwB,IAAUxB,mBACPyB,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAAEjB,OAAQgB,EAASE,KAAKC,UACtCjB,QAAQC,IAAIa,EAASE,KAAKC,YAE3BC,OAAM,SAAAP,GAAK,OAAI,EAAKI,SAAS,CAAEJ,c,uDAVpC,WACEQ,KAAK/B,qB,oBAYP,WAAU,IACAU,EAAWqB,KAAKZ,MAAhBT,OAER,OAAsB,IAAlBA,EAAOsB,OAAqB,KAEzB,cAAC,IAAD,CAAiBtB,OAAQA,Q,GAxBbuB,aA4BRX","file":"static/js/5.5d760f38.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'eade4640657bb63c2c171ffa3ce711eb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchGetTrending = () => {\n  return axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en-US`,\n  );\n};\n\nconst fetchMoviesByQuery = searchQuery => {\n  return axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`,\n  );\n};\n\nconst fetchMoviesDetails = movieId => {\n  return axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n};\n\nconst fetchMoviesCast = movieId => {\n  return axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n};\n\nconst fetchMoviesReviews = movieId => {\n  return axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\n  );\n};\n\nexport default {\n  fetchGetTrending,\n  fetchMoviesByQuery,\n  fetchMoviesDetails,\n  fetchMoviesCast,\n  fetchMoviesReviews,\n};\n","import { Link, withRouter } from 'react-router-dom';\nimport React from 'react';\n\nconst MoviesViewItems = ({ movies, location }) => {\n  console.log(location);\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={{\n              pathname: `movies/${movie.id}`,\n              state: {\n                from: location,\n              },\n            }}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n//  не передается location?\nexport default withRouter(MoviesViewItems);\n","import { Component } from 'react';\nimport MoviesApi from '../services/service_api';\n\nimport MoviesViewItems from '../components/MoviesViewItems/MoviesViewItems';\n\nclass HomeView extends Component {\n  state = {\n    error: null,\n    movies: [],\n  };\n\n  componentDidMount() {\n    this.fetchGetTrending();\n  }\n\n  fetchGetTrending = () => {\n    MoviesApi.fetchGetTrending()\n      .then(response => {\n        this.setState({ movies: response.data.results });\n        console.log(response.data.results);\n      })\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    if (movies.length === 0) return null;\n\n    return <MoviesViewItems movies={movies} />;\n  }\n}\n\nexport default HomeView;\n"],"sourceRoot":""}