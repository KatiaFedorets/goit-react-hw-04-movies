{"version":3,"sources":["services/service_api.jsx","components/MoviesViewItems/MoviesViewItems.jsx","components/SearchForm/SearchForm.jsx","views/MoviesPage.jsx"],"names":["API_KEY","BASE_URL","fetchGetTrending","axios","get","fetchMoviesByQuery","searchQuery","fetchMoviesDetails","movieId","fetchMoviesCast","fetchMoviesReviews","withRouter","movies","location","console","log","map","movie","to","pathname","id","state","from","title","SearchForm","query","handelNameChange","event","setState","target","value","handleSubmit","preventDefault","props","onSubmit","resetForm","this","type","autoFocus","placeholder","onChange","Component","defaultProps","MoviesPage","error","onSubmitForm","fetchMovies","MoviesApi","then","response","data","results","catch","prevProps","prevState","length","MoviesViewItems"],"mappings":"yIAAA,qBAEMA,EAAU,mCACVC,EAAW,gCAgCF,KACbC,iBA/BuB,WACvB,OAAOC,IAAMC,IAAN,UACFH,EADE,oCACkCD,EADlC,qBA+BPK,mBA1ByB,SAAAC,GACzB,OAAOH,IAAMC,IAAN,UACFH,EADE,gCAC8BD,EAD9B,iCAC8DM,EAD9D,iCA0BPC,mBArByB,SAAAC,GACzB,OAAOL,IAAMC,IAAN,UACFH,EADE,iBACeO,EADf,oBACkCR,EADlC,qBAqBPS,gBAhBsB,SAAAD,GACtB,OAAOL,IAAMC,IAAN,UACFH,EADE,iBACeO,EADf,4BAC0CR,EAD1C,qBAgBPU,mBAXyB,SAAAF,GACzB,OAAOL,IAAMC,IAAN,UACFH,EADE,iBACeO,EADf,4BAC0CR,EAD1C,uB,gCC9BT,gCAyBeW,iBAtBS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAEjC,OADAC,QAAQC,IAAIF,GAEV,6BACGD,EAAOI,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYF,EAAMG,IAC1BC,MAAO,CACLC,KAAMT,IAJZ,SAQGI,EAAMM,SATFN,EAAMG,a,yFCLjBI,E,4MASJH,MAAQ,CACNI,MAAO,I,EAGTC,iBAAmB,SAAAC,GACjB,EAAKC,SAAS,CACZH,MAAOE,EAAME,OAAOC,S,EAIxBC,aAAe,SAAAJ,GACbA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKb,MAAMI,OAC/B,EAAKU,a,EAGPA,UAAY,WACV,EAAKP,SAAS,CACZH,MAAO,M,4CAIX,WACE,OACE,uBAAMS,SAAUE,KAAKL,aAArB,UACE,uBACEM,KAAK,OACLP,MAAOM,KAAKf,MAAMI,MAClBa,WAAS,EACTC,YAAY,eACZC,SAAUJ,KAAKV,mBAEjB,wBAAQW,KAAK,SAAb,SACE,yD,GA1CeI,aAAnBjB,EACGkB,aAAe,CACpBR,SAAU,cA+CCV,Q,gBC/CTmB,E,4MACJtB,MAAQ,CACNf,YAAa,GACbM,OAAQ,GACRgC,MAAO,M,EAGTC,aAAe,SAAApB,GACb,EAAKG,SAAS,CACZtB,YAAamB,EACbb,OAAQ,GACRgC,MAAO,Q,EAWXE,YAAc,WAAO,IACXxC,EAAgB,EAAKe,MAArBf,YACRyC,IAAU1C,mBAAmBC,GAC1B0C,MAAK,SAAAC,GACJ,EAAKrB,SAAS,CAAEhB,OAAQqC,EAASC,KAAKC,aAEvCC,OAAM,SAAAR,GAAK,OAAI,EAAKhB,SAAS,CAAEgB,c,wDAbpC,SAAmBS,EAAWC,GAC5BxC,QAAQC,IAAIuC,EAAUhD,aAClBgD,EAAUhD,cAAgB8B,KAAKf,MAAMf,aACvC8B,KAAKU,gB,oBAaT,WAAU,IACAlC,EAAWwB,KAAKf,MAAhBT,OACR,OACE,qCACE,cAAC,EAAD,CAAYsB,SAAUE,KAAKS,eAC1BjC,EAAO2C,OAAS,GAAK,cAACC,EAAA,EAAD,CAAiB5C,OAAQA,W,GApC9B6B,aA0CVE","file":"static/js/6.39a49288.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'eade4640657bb63c2c171ffa3ce711eb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchGetTrending = () => {\n  return axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en-US`,\n  );\n};\n\nconst fetchMoviesByQuery = searchQuery => {\n  return axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`,\n  );\n};\n\nconst fetchMoviesDetails = movieId => {\n  return axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n};\n\nconst fetchMoviesCast = movieId => {\n  return axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n};\n\nconst fetchMoviesReviews = movieId => {\n  return axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\n  );\n};\n\nexport default {\n  fetchGetTrending,\n  fetchMoviesByQuery,\n  fetchMoviesDetails,\n  fetchMoviesCast,\n  fetchMoviesReviews,\n};\n","import { Link, withRouter } from 'react-router-dom';\nimport React from 'react';\n\nconst MoviesViewItems = ({ movies, location }) => {\n  console.log(location);\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={{\n              pathname: `movies/${movie.id}`,\n              state: {\n                from: location,\n              },\n            }}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n//  не передается location?\nexport default withRouter(MoviesViewItems);\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchForm extends Component {\n  static defaultProps = {\n    onSubmit: () => {},\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  state = {\n    query: '',\n  };\n\n  handelNameChange = event => {\n    this.setState({\n      query: event.target.value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.query);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      query: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          value={this.state.query}\n          autoFocus\n          placeholder=\"Search movie\"\n          onChange={this.handelNameChange}\n        />\n        <button type=\"submit\">\n          <span>Search movie</span>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import { Component } from 'react';\nimport SearchForm from '../components/SearchForm/SearchForm';\nimport MoviesApi from '../services/service_api';\nimport MoviesViewItems from '../components/MoviesViewItems/MoviesViewItems';\n\nclass MoviesPage extends Component {\n  state = {\n    searchQuery: '',\n    movies: [],\n    error: null,\n  };\n\n  onSubmitForm = query => {\n    this.setState({\n      searchQuery: query,\n      movies: [],\n      error: null,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevState.searchQuery);\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchMovies();\n    }\n  }\n\n  fetchMovies = () => {\n    const { searchQuery } = this.state;\n    MoviesApi.fetchMoviesByQuery(searchQuery)\n      .then(response => {\n        this.setState({ movies: response.data.results });\n      })\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <>\n        <SearchForm onSubmit={this.onSubmitForm} />\n        {movies.length > 0 && <MoviesViewItems movies={movies} />}\n      </>\n    );\n  }\n}\n\nexport default MoviesPage;\n"],"sourceRoot":""}